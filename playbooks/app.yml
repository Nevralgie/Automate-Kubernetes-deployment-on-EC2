- hosts: tag_role_Master
  become: true
  tasks:
    - name: Create deployment pulling private image
      kubernetes.core.k8s:
        state: present
        kubeconfig: /home/ubuntu/.kube/config
        definition:
          apiVersion: apps/v1
          kind: Deployment
          metadata:
            name: app-container
            namespace: default
          spec:
            replicas: 2
            selector:
              matchLabels:
                app: demo-app
            template:
              metadata:
                labels:
                  app: demo-app
              spec:
                containers:
                  - name: dum-app-container
                    image: registry.gitlab.com/ara1504621/terraform-test/graph_stock_pyapp_devenv1.0:rcandidate
                    ports:
                      - containerPort: 5000  # The port your application is listening on
                imagePullSecrets:
                  - name: gitlab-cred

    - name: Expose deployment using nodePort
      kubernetes.core.k8s:
        state: present
        kubeconfig: /home/ubuntu/.kube/config
        definition:
          apiVersion: v1
          kind: Service
          metadata:
            name: app-nodeport-service
            namespace: default
          spec:
            type: NodePort
            selector:
              app: demo-app
            ports:
              - protocol: TCP
                port: 5000  # The port on which the service will be exposed
                targetPort: 5000  # The port your application is listening on

# - name: Create Ingress resource
#   kubernetes.core.k8s:
#     state: present
#     kubeconfig: /home/ubuntu/.kube/config
#     definition:
#       apiVersion: networking.k8s.io/v1
#       kind: Ingress
#       metadata:
#         name: app-ingress
#         namespace: default
#         annotations:
#           nginx.ingress.kubernetes.io/rewrite-target: /
#       spec:
#         rules:
#           - host: your-app.example.com
#             http:
#               paths:
#                 - path: /
#                   pathType: Prefix
#                   backend:
#                     service:
#                       name: app-clusterip-service
#                       port:
#                         number: 80  # This should match the port on the service


# - name: Create deployment pulling private image
#   kubernetes.core.k8s:
#     state: present
#     kubeconfig: /home/ubuntu/.kube/config
#     definition:
#       apiVersion: apps/v1
#       kind: Deployment
#       metadata:
#         name: app-container
#         namespace: default
#       spec:
#         replicas: 4
#         selector:
#           matchLabels:
#             app: demo-app
#         template:
#           metadata:
#             labels:
#               app: demo-app
#           spec:
#             containers:
#               - name: dum-app-container
#                 image: registry.gitlab.com/ara1504621/terraform-test/app_temoin:v0.1
#                 ports:
#                   - containerPort: 5000
#             imagePullSecrets: 
#               - name: gitlab-cred

# - name: Expose deployment using NodePort
#   kubernetes.core.k8s:
#     state: present
#     kubeconfig: /home/ubuntu/.kube/config
#     definition:
#       apiVersion: v1
#       kind: Service
#       metadata:
#         name: app-nodeport-service
#         namespace: default
#       spec:
#         type: NodePort
#         selector:
#           app: demo-app
#         ports:
#           - protocol: TCP
#             port: 80 # The port on which the service will be exposed
#             targetPort: 5000 # The port your application is listening on
#             nodePort: 31000  # NodePort range is 30000-32767