---
- name: Configure Kubernetes prerequisites
  hosts: all  # Target all hosts defined in your Ansible inventory
  become: true  # Run tasks with sudo privileges

  tasks:

    - name: Add hostname and IP address to /etc/hosts file
      lineinfile:
        dest: /etc/hosts
        line: "{{ ansible_default_ipv4.address }} {{ ansible_hostname }}"
        state: present

    - name: Configure modules for Containerd by adding them to /etc/modules-load.d/containerd.conf
      copy:
        content: |
          overlay
          br_netfilter
        dest: /etc/modules-load.d/containerd.conf

    - name: Load kernel modules
      modprobe:
        name: "{{ item }}"
      with_items:
        - overlay
        - br_netfilter

    # Configure sysctl settings for Kubernetes
    - name: Configure sysctl settings
      copy:
        dest: "/etc/sysctl.d/99-kubernetes-cri.conf"  # Destination file path
        content: |
          net.ipv4.ip_forward = 1
          net.bridge.bridge-nf-call-ip6tables = 1
          net.bridge.bridge-nf-call-iptables = 1

    - name: Remove swap entry from /etc/fstab
      lineinfile:
        dest: /etc/fstab
        state: absent
        regexp: '^.*\sswap\s.*$'

    # Apply sysctl settings
    - name: Apply sysctl settings
      command: sysctl --system  # Run sysctl to apply changes

    # Update apt cache
    - name: Update apt cache
      apt:
        update_cache: yes  # Update apt cache

    # Install prerequisite packages for Kubernetes
    - name: Install prerequisite packages
      apt:
        name: "{{ item }}"  # Package name
        state: present  # Ensure package is present
      loop:
        - apt-transport-https
        - ca-certificates
        - curl
        - containerd

    - name: Create directory for containerd configuration
      file:
        path: /etc/containerd
        state: directory

    - name: add Containerd configuration
      shell: /usr/bin/containerd config default > /etc/containerd/config.toml

    - name: Enable systemd cgroup driver for containerd in the configuration file previously generated
      replace:
        path: /etc/containerd/config.toml
        regexp: 'SystemdCgroup = false'
        replace: 'SystemdCgroup = true'

    - name: Restart and enable containerd service to avoid manual restart when rebooting
      systemd:
        name: containerd
        state: restarted
        enabled: yes
        daemon_reload: yes

    # Create directory for apt keyring
    - name: Create apt keyring directory
      file:
        path: "/etc/apt/keyrings"  # Directory path
        state: directory  # Ensure directory exists
        mode: '0755'  # Set directory permissions

    # # Download Kubernetes apt key and place it in keyring directory
    # - name: Download and add Kubernetes apt key
    #   get_url:
    #     url: "https://pkgs.k8s.io/core:/stable:/v1.29/deb/Release.key"  # URL of Kubernetes apt key
    #     dest: "/etc/apt/keyrings/kubernetes-apt-keyring.gpg"  # Destination path
    #   register: key_download  # Register the result for later use

    # # Add Kubernetes apt repository
    # - name: Add Kubernetes package repository
    #   copy:
    #     dest: /etc/apt/sources.list.d/kubernetes.list
    #     content: |
    #       deb [signed-by=/etc/apt/keyrings/kubernetes-apt-keyring.gpg] https://pkgs.k8s.io/core:/stable:/v1.29/deb/ /

    # - name: Add Kubernetes repository to /etc/apt/sources.list.d/
    #   copy:
    #     content: |
    #       [kubernetes]
    #       name=Kubernetes
    #       baseurl=https://pkgs.k8s.io/core:/stable:/v1.29/deb/
    #       enabled=1
    #       gpgcheck=1
    #       repo_gpgcheck=1
    #       gpgkey=https://pkgs.k8s.io/core:/stable:/v1.29/deb/Release.key
    #     dest: /etc/apt/sources.list.d/kubernetes.list
    - name: Add Kubernetes apt repository
      apt_repository:
        repo: deb https://apt.kubernetes.io/ kubernetes-xenial main
        state: present
        filename: kubernetes.list
        keyserver: keyserver.ubuntu.com
        key: C52E9DF436A0D321

    # - name: Help tools such as command-not-found to work correctly by giving permission
    #   file:
    #     path: "/etc/apt/sources.list.d/kubernetes.list"  # Directory path
    #     state: file  # Ensure file exists
    #     mode: '644'  # Set directory permissions
    
    # Update apt cache to enrich the list with added k8s packages
    - name: Update apt cache
      apt:
        update_cache: yes

    # Install Kubernetes components
    - name: Install Kubernetes components
      apt:
        name: "{{ item }}"  # Package name
        state: present  # Ensure package is present
      loop:
        - kubelet=1.29.0-1.1
        - kubeadm=1.29.0-1.1
        - kubectl=1.29.0-1.1

    - name: Hold package at current version
      apt:
        name: "{{ item }}"
        state: hold
      loop:
        - kubelet
        - kubeadm
        - kubectl