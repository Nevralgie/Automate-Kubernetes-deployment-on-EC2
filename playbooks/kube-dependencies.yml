- name: Configure Kubernetes prerequisites
  hosts: all  # Target all hosts defined in your Ansible inventory
  become: true  # Run tasks with sudo privileges

  tasks:
    # Load required kernel modules
    - name: Load kernel modules
      copy:
        dest: "/etc/modules-load.d/k8s.conf"  # Destination file path
        content: |
          br_netfilter 

    # Configure sysctl settings for Kubernetes
    - name: Configure sysctl settings
      copy:
        dest: "/etc/sysctl.d/k8s.conf"  # Destination file path
        content: |
          net.bridge.bridge-nf-call-ip6tables = 1  
          net.bridge.bridge-nf-call-iptables = 1   

    # Apply sysctl settings
    - name: Apply sysctl settings
      command: sysctl --system  # Run sysctl to apply changes

    # Update apt cache
    - name: Update apt cache
      apt:
        update_cache: yes  # Update apt cache

    # Install prerequisite packages for Kubernetes
    - name: Install prerequisite packages
      apt:
        name: "{{ item }}"  # Package name
        state: present  # Ensure package is present
      loop:
        - apt-transport-https
        - ca-certificates
        - curl

    # Create directory for apt keyring
    - name: Create apt keyring directory
      file:
        path: "/etc/apt/keyrings"  # Directory path
        state: directory  # Ensure directory exists
        mode: '0755'  # Set directory permissions

    # Download Kubernetes apt key and place it in keyring directory
    - name: Download and add Kubernetes apt key
      get_url:
        url: "https://pkgs.k8s.io/core:/stable:/v1.29/deb/Release.key"  # URL of Kubernetes apt key
        dest: "/etc/apt/keyrings/kubernetes-apt-keyring.gpg"  # Destination path
      register: key_download  # Register the result for later use

    # Add Kubernetes apt repository
    - name: Add Kubernetes apt repository
      apt_repository:
        repo: "deb [signed-by=/etc/apt/keyrings/kubernetes-apt-keyring.gpg] https://pkgs.k8s.io/core:/stable:/v1.29/deb/ /"  # Kubernetes apt repository URL
        state: present  # Ensure repository is present

    # Install Kubernetes components
    - name: Install Kubernetes components
      apt:
        name: "{{ item }}"  # Package name
        state: present  # Ensure package is present
      loop:
        - kubelet=1.29.0-1.1
        - kubeadm=1.29.0-1.1
        - kubectl=1.29.0-1.1

    # Hold Kubernetes packages at current version
    - name: Hold Kubernetes packages at current version
      apt_mark:
        name: "{{ item }}"  # Package name
        state: hold  # Hold the package at its current version
      loop:
        - kubelet
        - kubeadm
        - kubectl