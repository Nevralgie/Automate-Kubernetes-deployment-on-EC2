variables:
  GITLAB_TOKEN: $CI_PIPELINE_TOKEN

stages:
  - validate
  - plan
  - apply
  - provision
  - destroy

validate:
  stage: validate
  image:
    name: hashicorp/terraform:latest
    entrypoint:
      - '/usr/bin/env'
      - 'PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin'
  before_script:
    - export AWS_ACCESS_KEY=${AWS_ACCESS_KEY_ID}
    - export AWS_SECRET_ACCESS_KEY=${AWS_SECRET_ACCESS_KEY}
    - rm -rf .terraform
    - terraform --version
    - terraform init
  script:
    - terraform fmt -recursive
    - terraform validate
  artifacts:
    paths:
      - aws.cfg
  when: on_success

plan:
  stage: plan
  image:
    name: hashicorp/terraform:latest
    entrypoint:
      - '/usr/bin/env'
      - 'PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin'
  before_script:
    - export AWS_ACCESS_KEY=${AWS_ACCESS_KEY_ID}
    - export AWS_SECRET_ACCESS_KEY=${AWS_SECRET_ACCESS_KEY}
    - rm -rf .terraform
    - terraform --version
    - terraform init
  script:
    - terraform plan
  dependencies:
    - validate

apply:
  stage: apply
  image:
    name: hashicorp/terraform:latest
    entrypoint:
      - '/usr/bin/env'
      - 'PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin'
  before_script:
    - export AWS_ACCESS_KEY=${AWS_ACCESS_KEY_ID}
    - export AWS_SECRET_ACCESS_KEY=${AWS_SECRET_ACCESS_KEY}
    - rm -rf .terraform
    - terraform --version
    - terraform init
  script:
    - terraform apply --auto-approve
  dependencies:
    - plan
  when: manual

provision:
  stage: provision
  image: python:3.9.17-slim-bullseye
  before_script:
    - export AWS_ACCESS_KEY=${AWS_ACCESS_KEY_ID}
    - export AWS_SECRET_ACCESS_KEY=${AWS_SECRET_ACCESS_KEY}
    - export ANSIBLE_CONFIG=ansible.cfg
    - 'command -v ssh-agent >/dev/null || ( apt-get update -y && apt-get install openssh-client -y )'
    - eval $(ssh-agent -s)
    - echo "$SSH_PRIVATE_KEY" | tr -d '\r' | ssh-add - > /dev/null
    - mkdir -p ~/.ssh
    - chmod 700 ~/.ssh
  script:
    - apt-get update && apt-get install ansible -y
    - apt-get install python3-boto3 awscli -y
    - mkdir -p ~/.aws
    - echo "[profile my_profile]" > ~/.aws/config
    - echo "region = us-west-3" >> ~/.aws/config
    - echo "output = text" >> ~/.aws/config
    - echo "[my_profile]" > ~/.aws/credentials
    - echo "aws_access_key_id = $AWS_ACCESS_KEY_ID" >> ~/.aws/credentials
    - echo "aws_secret_access_key = $AWS_SECRET_ACCESS_KEY" >> ~/.aws/credentials
    - aws --profile my_profile ec2 describe-instances
    - aws sts get-caller-identity
    - ansible --version
    - ansible -m ping all
    - ansible-inventory --list
    - ansible-inventory --graph
  dependencies:
    - apply
  when: manual

destroy:
  stage: destroy
  before_script:
    - export AWS_ACCESS_KEY=${AWS_ACCESS_KEY_ID}
    - export AWS_SECRET_ACCESS_KEY=${AWS_SECRET_ACCESS_KEY}
    - rm -rf .terraform
    - terraform --version
    - terraform init
  script:
    - terraform destroy --auto-approve
  dependencies:
    - apply
  when: manual